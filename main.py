import os
import dotenv
import telebot

from telebot import types

from config import URL, DEPLOY
from currency_rate_handle import get_info, get_amount_of_money_to_buy

if DEPLOY:
    from background import keep_alive # for deploy
    TELEGRAM_BOT_TOKEN = os.environ['TELEGRAM_BOT_TOKEN']
else:
    dotenv.load_dotenv(dotenv.find_dotenv())
    TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

buttons = {
    'info': '–ò–Ω—Ñ–æ',
    'number': '–ú–Ω–µ –Ω—É–∂–Ω–æ ... –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Ä—É–±–ª–µ–π!',
    'link': ('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç. –ï—Å–ª–∏ —Ç—ã, –∫–æ–Ω–µ—á–Ω–æ, —Å–æ–º–Ω–µ–≤–∞–µ—à—å—Å—è –≤–æ –º–Ω–µ ‚òπÔ∏è.', '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç'),
}


@bot.message_handler(commands=['start'])
def main(message):
    markup = types.ReplyKeyboardMarkup()

    markup.add(types.KeyboardButton(buttons['info']))
    markup.add(types.KeyboardButton(buttons['number']))
    markup.add(types.KeyboardButton(buttons['link'][0]))

    response_text = \
        f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name} {message.from_user.last_name}</b> ü§ü!\n' \
        '–Ø - –±–æ—Ç, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—É—Ä—Å–æ–º –≤–∞–ª—é—Ç –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã "–ú–∏—Ä".'

    bot.send_message(
        chat_id=message.chat.id,
        text=response_text,
        parse_mode='html',
        reply_markup=markup,
    )


@bot.message_handler(content_types=['text'])
def info(message):
    if message.text.lower() in ('–ø—Ä–∏–≤–µ—Ç', 'hi', 'hellow', '–∑–¥–∞—Ä–æ–≤–∞'):
        response_text = f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name} {message.from_user.last_name}</b>!'
        bot.reply_to(message, response_text, parse_mode='html')
    elif message.text == buttons['info']:
        response_text = get_info()
        bot.reply_to(message, response_text, parse_mode='html')
    elif message.text.startswith(buttons['link'][1]):
        bot.reply_to(message, URL, parse_mode='html')
    elif message.text == buttons['number']:
        bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Ä—É–±–ª–µ–π, –∫–æ—Ç–æ—Ä–æ–µ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.')
        bot.register_next_step_handler(message, on_number)


def on_number(message):
    try:
        n = float(message.text.strip())
    except (TypeError, ValueError):
        bot.reply_to(message, '–í–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
        return
    bot.reply_to(
        message,
        f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ä—É–±–ª–µ–π {get_amount_of_money_to_buy(n):,.2f}'
    )


if DEPLOY:
    keep_alive()

bot.polling(none_stop=True)





# markup = types.ReplyKeyboardMarkup()

# markup.add(
#     types.KeyboardButton('Currency Rate', resize_keyboard=True)
# )
#


# @bot.message_handler(commands=['start'])
# def main(message):
#     rate = get_currency_rate_bel_rub()
#     bot.send_message(message.chat.id, rate)


# '–î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫—É—Ä—Å –≤–∞–ª—é—Ç <a>https://mironline.ru/support/list/kursy_mir/?sphrase_id=99648</a>, '\
# '–µ—Å–ª–∏ —Ç—ã, –∫–æ–Ω–µ—á–Ω–æ, —Å–æ–º–Ω–µ–≤–∞–µ—à—å—Å—è –≤–æ –º–Ω–µ ‚òπÔ∏è.'


# @bot.message_handler(commands=['rate'])
# def rate(message):
#     markup = types.InlineKeyboardMarkup()
#
#     markup.add(
#         types.InlineKeyboardButton(
#             '–ò–Ω—Ñ–æ',
#             callback_data='info')
#     )
#
#     markup.add(
#         types.InlineKeyboardButton(
#             '–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Ä—É–±–ª–µ–π?',
#             callback_data='number'
#         )
#     )
#
#     markup.add(
#         types.InlineKeyboardButton(
#             '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç. –ï—Å–ª–∏ —Ç—ã, –∫–æ–Ω–µ—á–Ω–æ, —Å–æ–º–Ω–µ–≤–∞–µ—à—å—Å—è –≤–æ –º–Ω–µ ‚òπÔ∏è.',
#             url='https://mironline.ru/support/list/kursy_mir/?sphrase_id=99648'
#         )
#     )
#
#     bot.reply_to(message, '–ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:', reply_markup=markup)

    # btn1 = None
    # btn2 = None
    # markup.row(btn1, btn2)
    # btn4 = None
    # markup.row(btn4)
